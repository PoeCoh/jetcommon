name: CI

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v4

    - name: Setup Zig
      uses: mlugg/setup-zig@main



  check-and-test-zig:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Zig (latest)
        uses: mlugg/setup-zig@v2
        with:
          version: master

      - name: Get current zig version
        id: current_version
        run: |
          VERSION=$(zig version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Zig version: $VERSION"

      - name: Cache zig version
        id: cache_version
        uses: actions/cache@v3
        with:
          path: .zig-version-cache
          key: zig-version-${{ steps.current_version.outputs.version }}
          restore-keys: |
            zig-version-

      - name: Check if version changed
        id: version_check
        run: |
          if [ -f ".zig-version-cache/last-version" ]; then
            LAST_VERSION=$(cat .zig-version-cache/last-version)
            echo "Last tested version: $LAST_VERSION"
            echo "Current version: ${{ steps.current_version.outputs.version }}"
            
            if [ "$LAST_VERSION" = "${{ steps.current_version.outputs.version }}"]; then
              echo "version_changed=false" >> $GITHUB_OUTPUT
              echo "Version unchanged, skipping"
            else
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "Version changed"
            fi
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build
        if: steps.version_check.outputs.version_changed == 'true'
        run: zig build

      - name: Run Tests
        if: steps.version_check.outputs.version_changed == 'true'
        run: zig build test

      - name: Update version cache
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          mkdir -p .zig-version-cache
          echo "${{ steps.current_version.outputs.version }}" >> .zig-version-cache/last-version

